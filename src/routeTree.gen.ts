/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RollCallLazyImport = createFileRoute('/roll-call')()
const RegisterResponLazyImport = createFileRoute('/register-respon')()
const ProductDetailLazyImport = createFileRoute('/product-detail')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RollCallLazyRoute = RollCallLazyImport.update({
  path: '/roll-call',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/roll-call.lazy').then((d) => d.Route))

const RegisterResponLazyRoute = RegisterResponLazyImport.update({
  path: '/register-respon',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/register-respon.lazy').then((d) => d.Route),
)

const ProductDetailLazyRoute = ProductDetailLazyImport.update({
  path: '/product-detail',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/product-detail.lazy').then((d) => d.Route),
)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/product-detail': {
      id: '/product-detail'
      path: '/product-detail'
      fullPath: '/product-detail'
      preLoaderRoute: typeof ProductDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/register-respon': {
      id: '/register-respon'
      path: '/register-respon'
      fullPath: '/register-respon'
      preLoaderRoute: typeof RegisterResponLazyImport
      parentRoute: typeof rootRoute
    }
    '/roll-call': {
      id: '/roll-call'
      path: '/roll-call'
      fullPath: '/roll-call'
      preLoaderRoute: typeof RollCallLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/product-detail': typeof ProductDetailLazyRoute
  '/register-respon': typeof RegisterResponLazyRoute
  '/roll-call': typeof RollCallLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/product-detail': typeof ProductDetailLazyRoute
  '/register-respon': typeof RegisterResponLazyRoute
  '/roll-call': typeof RollCallLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/product-detail': typeof ProductDetailLazyRoute
  '/register-respon': typeof RegisterResponLazyRoute
  '/roll-call': typeof RollCallLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/product-detail'
    | '/register-respon'
    | '/roll-call'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/product-detail' | '/register-respon' | '/roll-call'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/product-detail'
    | '/register-respon'
    | '/roll-call'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ProductDetailLazyRoute: typeof ProductDetailLazyRoute
  RegisterResponLazyRoute: typeof RegisterResponLazyRoute
  RollCallLazyRoute: typeof RollCallLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  ProductDetailLazyRoute: ProductDetailLazyRoute,
  RegisterResponLazyRoute: RegisterResponLazyRoute,
  RollCallLazyRoute: RollCallLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/product-detail",
        "/register-respon",
        "/roll-call"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/product-detail": {
      "filePath": "product-detail.lazy.tsx"
    },
    "/register-respon": {
      "filePath": "register-respon.lazy.tsx"
    },
    "/roll-call": {
      "filePath": "roll-call.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
